{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","defaultProps","ContactForm","props","useState","name","setName","number","setNumber","resetForm","onSubmit","event","preventDefault","contacts","find","contact","toLowerCase","alert","style","form","label","type","value","onChange","currentTarget","input","pattern","title","required","button","Filter","ContactItem","onDeleteContact","li","href","a","onClick","id","ContactList","div","map","App","ContactsJson","setContacts","filter","setFilter","useEffect","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","data","nanoid","prevState","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bb0589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15mIE\",\"button\":\"ContactForm_button__-0L1e\",\"input\":\"ContactForm_input__2rMMr\",\"label\":\"ContactForm_label__Qxifn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2bc6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__JJQF_\",\"li\":\"ContactItem_li__Fy6bD\",\"a\":\"ContactItem_a__2hJ3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2bGEy\",\"input\":\"Filter_input__3PwgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__37D_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__3Gb9t\"};","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetForm();\n    if (props.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    }\n    props.onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={style.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import style from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={style.li}>\n      <span>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={style.a}>\n        {contact.number}\n      </a>\n      <button type=\"button\" onClick={() => onDeleteContact(contact.id)} className={style.button}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div className={style.div}>\n      <ul>\n        {contacts.map(contact => (\n          <ContactItem contact={contact} onDeleteContact={onDeleteContact} key={contact.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport style from '../App/App.module.css';\nimport ContactsJson from '../../json/contacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useState(ContactsJson);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(savedContacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = data => {\n    data.id = nanoid();\n    setContacts(prevState => [...prevState, data]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    if (contacts) {\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n  };\n\n  return (\n    <Container>\n      <h2 className={style.title}>Phonebook</h2>\n      <ContactForm onSubmit={addContact} contacts={contacts} />\n      <h2 className={style.title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={getFilteredContacts()} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}